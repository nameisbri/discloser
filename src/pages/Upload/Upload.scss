@use "../../styles/partials/variables" as vars;
@use "../../styles/partials/mixins" as mix;
@use "../../styles/partials/typography" as type;
@use "sass:map";

.upload {
  min-height: 100vh;
  background-color: map.get(vars.$colors, "primary-light");
  padding: map.get(vars.$spacing, "lg");

  &__container {
    @include mix.card;
    max-width: 800px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: map.get(vars.$spacing, "lg");
  }

  &__header {
    border-bottom: 1px solid map.get(vars.$colors, "border");
    padding-bottom: map.get(vars.$spacing, "md");
  }

  &__back-button {
    @include mix.flex(row, flex-start, center, map.get(vars.$spacing, "xs"));
    color: map.get(vars.$colors, "primary");
    font-weight: map.get(type.$font-weights, "medium");

    &:hover {
      color: map.get(vars.$colors, "primary-dark");
    }
  }

  &__content {
    @include mix.flex(
      column,
      flex-start,
      stretch,
      map.get(vars.$spacing, "xl")
    );
  }

  &__dropzone {
    @include mix.flex(column, center, center, map.get(vars.$spacing, "md"));
    border: 2px dashed map.get(vars.$colors, "border");
    border-radius: map.get(vars.$border-radius, "lg");
    padding: map.get(vars.$spacing, "xl");
    position: relative;
    text-align: center;
    background-color: map.get(vars.$colors, "secondary-light");
    transition: all 0.2s ease;
    cursor: pointer;

    &:hover {
      border-color: map.get(vars.$colors, "primary");
    }

    &--dragging {
      border-color: map.get(vars.$colors, "primary");
      background-color: rgba(map.get(vars.$colors, "primary-light"), 0.3);
    }
  }

  &__icon {
    color: map.get(vars.$colors, "primary");
    margin-bottom: map.get(vars.$spacing, "md");
  }

  &__title {
    font-size: map.get(type.$font-sizes, "xl");
    font-weight: map.get(type.$font-weights, "semibold");
    color: map.get(vars.$colors, "text");
  }

  &__subtitle {
    color: map.get(vars.$colors, "text-light");
    margin-bottom: map.get(vars.$spacing, "md");
  }

  &__file-types {
    @include mix.flex(row, center, center, map.get(vars.$spacing, "xs"));
    margin-bottom: map.get(vars.$spacing, "md");
  }

  &__file-type {
    padding: map.get(vars.$spacing, "xxs") map.get(vars.$spacing, "xs");
    background-color: map.get(vars.$colors, "background");
    border-radius: map.get(vars.$border-radius, "sm");
    font-size: map.get(type.$font-sizes, "sm");
    color: map.get(vars.$colors, "text-light");
  }

  &__file-limit {
    font-size: map.get(type.$font-sizes, "sm");
    color: map.get(vars.$colors, "text-light");
    margin-top: map.get(vars.$spacing, "md");
  }

  &__input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;

    &:disabled {
      cursor: not-allowed;
    }
  }

  &__error {
    color: map.get(vars.$colors, "danger");
    font-size: map.get(type.$font-sizes, "sm");
    margin-top: map.get(vars.$spacing, "sm");
    text-align: center;
  }

  &__file-list {
    width: 100%;
    margin-top: map.get(vars.$spacing, "md");
    max-height: 200px;
    overflow-y: auto;
  }

  &__file-item {
    @include mix.flex(row, space-between, center);
    padding: map.get(vars.$spacing, "xs") map.get(vars.$spacing, "sm");
    background-color: map.get(vars.$colors, "background");
    border-radius: map.get(vars.$border-radius, "sm");
    margin-bottom: map.get(vars.$spacing, "xs");
    border: 1px solid map.get(vars.$colors, "border");

    &:last-child {
      margin-bottom: 0;
    }
  }

  &__file-name {
    flex: 1;
    font-size: map.get(type.$font-sizes, "sm");
    color: map.get(vars.$colors, "text");
    margin-right: map.get(vars.$spacing, "sm");
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &__file-size {
    font-size: map.get(type.$font-sizes, "xs");
    color: map.get(vars.$colors, "text-light");
    margin-right: map.get(vars.$spacing, "sm");
    white-space: nowrap;
  }

  &__file-remove {
    color: map.get(vars.$colors, "danger");
    font-size: map.get(type.$font-sizes, "lg");
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background-color 0.2s ease;

    &:hover {
      background-color: map.get(vars.$colors, "danger-light");
    }
  }

  &__supported-tests {
    @include mix.card(map.get(vars.$spacing, "md"));
  }

  &__supported-title {
    font-size: map.get(type.$font-sizes, "lg");
    font-weight: map.get(type.$font-weights, "semibold");
    margin-bottom: map.get(vars.$spacing, "md");
  }

  &__test-list {
    @include mix.flex(
      column,
      flex-start,
      stretch,
      map.get(vars.$spacing, "sm")
    );
    list-style: none;
  }

  &__test-item {
    @include mix.flex(row, flex-start, center, map.get(vars.$spacing, "sm"));
    color: map.get(vars.$colors, "text");
  }

  &__test-check {
    color: map.get(vars.$colors, "success");
  }

  &__submit-button {
    background-color: map.get(vars.$colors, "primary");
    color: white;
    padding: map.get(vars.$spacing, "md");
    border-radius: map.get(vars.$border-radius, "md");
    font-weight: map.get(type.$font-weights, "medium");
    transition: all 0.2s ease;

    &:hover:not(:disabled) {
      background-color: map.get(vars.$colors, "primary-dark");
    }

    &:disabled {
      background-color: map.get(vars.$colors, "secondary");
      cursor: not-allowed;
      opacity: 0.7;
    }
  }
}
