// Share.scss
@use "sass:map";
@use "../../styles/partials/variables" as vars;
@use "../../styles/partials/mixins" as mix;
@use "../../styles/partials/typography" as type;

.share {
  min-height: 100vh;
  background-color: map.get(vars.$colors, "primary-light");
  padding: map.get(vars.$spacing, "lg");
  padding-bottom: map.get(vars.$spacing, "xl") * 3;

  &__header {
    @include mix.card;
    @include mix.flex(
      column,
      flex-start,
      stretch,
      map.get(vars.$spacing, "xs")
    );
    margin-bottom: map.get(vars.$spacing, "lg");
  }

  &__back-button {
    @include mix.flex(row, flex-start, center, map.get(vars.$spacing, "xs"));
    color: map.get(vars.$colors, "primary");
    font-weight: map.get(type.$font-weights, "medium");
    padding: 0 0 map.get(vars.$spacing, "sm") 0;
    border-bottom: 1px solid map.get(vars.$colors, "border");
    margin-bottom: map.get(vars.$spacing, "md");
    width: 100%;
    transition: color 0.2s ease;

    &:hover {
      color: map.get(vars.$colors, "primary-dark");
    }
  }

  &__header-title {
    color: map.get(vars.$colors, "primary");
    font-size: map.get(type.$font-sizes, "lg");
    font-weight: map.get(type.$font-weights, "semibold");
  }

  &__user {
    @include mix.flex(
      row,
      flex-start,
      flex-start,
      map.get(vars.$spacing, "md")
    );
  }

  .user-header__avatar {
    width: 75px;
    height: 75px;
    border-radius: 50%;
    object-fit: cover;
  }

  &__info {
    @include mix.flex(
      column,
      flex-start,
      flex-start,
      map.get(vars.$spacing, "xxs")
    );
  }

  &__username {
    @include mix.flex(
      column,
      flex-start,
      flex-start,
      map.get(vars.$spacing, "xs")
    );
    color: map.get(vars.$colors, "text");
    font-size: map.get(type.$font-sizes, "lg");
    font-weight: map.get(type.$font-weights, "semibold");
    min-width: 8rem;
  }

  &__secure-wrapper {
    position: relative;
    display: inline-flex;
    align-items: center;
    cursor: help;

    &:hover .share__tooltip {
      opacity: 1;
      visibility: visible;
      transform: translateY(-4px);
    }
  }

  &__secure-icon {
    color: map.get(vars.$colors, "success");
    width: 20px;
    height: 20px;
  }

  &__secure-label {
    color: map.get(vars.$colors, "success");
    font-size: map.get(type.$font-sizes, "sm");
    font-weight: map.get(type.$font-weights, "medium");
    margin-left: map.get(vars.$spacing, "xxs");
  }

  &__tooltip {
    position: absolute;
    bottom: 100%;
    padding: map.get(vars.$spacing, "sm") map.get(vars.$spacing, "md");
    background-color: map.get(vars.$colors, "secondary-dark");
    color: white;
    font-size: map.get(type.$font-sizes, "xs");
    border-radius: map.get(vars.$border-radius, "md");
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.2s ease;
    z-index: 10;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);

    &::after {
      content: "";
      position: absolute;
      top: 100%;
      left: map.get(vars.$spacing, "sm");
      // transform: translateX(-50%);
      border: 6px solid transparent;
      border-top-color: map.get(vars.$colors, "text");
    }
  }

  &__date,
  &__frequency {
    color: map.get(vars.$colors, "text-light");
    font-size: map.get(type.$font-sizes, "sm");
    line-height: 1.5;
    @include mix.flex(column, space-around, flex-start, 0);
  }

  // Results section
  &__results {
    @include mix.card;
    margin-bottom: map.get(vars.$spacing, "lg");
  }

  &__results-header {
    padding: map.get(vars.$spacing, "lg");
    border-bottom: 1px solid map.get(vars.$colors, "border");
  }

  &__results-date {
    font-size: map.get(type.$font-sizes, "xl");
    font-weight: map.get(type.$font-weights, "semibold");
    color: map.get(vars.$colors, "text");
    margin-bottom: map.get(vars.$spacing, "xs");
  }

  &__results-validity {
    font-size: map.get(type.$font-sizes, "sm");
    color: map.get(vars.$colors, "text-light");
  }

  // Individual test results
  &__tests {
    @include mix.flex(column, flex-start, stretch);
  }

  &__test {
    padding: map.get(vars.$spacing, "lg");
    border-bottom: 1px solid map.get(vars.$colors, "border");
    transition: background-color 0.2s ease;

    &:last-child {
      border-bottom: none;
    }

    &:hover {
      background-color: rgba(map.get(vars.$colors, "primary-light"), 0.5);
    }
  }

  &__test-info {
    @include mix.flex(row, space-between, center);
    margin-bottom: map.get(vars.$spacing, "xs");
  }

  &__test-name {
    color: map.get(vars.$colors, "primary");
    font-size: map.get(type.$font-sizes, "lg");
    font-weight: map.get(type.$font-weights, "medium");
  }

  &__test-type {
    display: block;
    color: map.get(vars.$colors, "text-light");
    font-size: map.get(type.$font-sizes, "sm");
  }

  &__test-note {
    display: block;
    line-height: 1.5;

    &:not(:last-child) {
      margin-bottom: map.get(vars.$spacing, "xxs");
    }
  }

  // Share actions section
  &__actions {
    @include mix.card;
    @include mix.flex(
      column,
      flex-start,
      stretch,
      map.get(vars.$spacing, "md")
    );
  }

  &__link {
    @include mix.flex(row, space-between, center, map.get(vars.$spacing, "sm"));
  }

  &__input {
    flex: 1;
    padding: map.get(vars.$spacing, "md");
    border: 1px solid map.get(vars.$colors, "border");
    border-radius: map.get(vars.$border-radius, "md");
    font-size: map.get(type.$font-sizes, "sm");
    color: map.get(vars.$colors, "text");
    background-color: white;
    transition: all 0.2s ease;

    &:focus {
      border-color: map.get(vars.$colors, "primary");
      outline: none;
    }
  }

  &__button {
    @include mix.flex(row, center, center);
    padding: map.get(vars.$spacing, "md") map.get(vars.$spacing, "lg");
    border-radius: map.get(vars.$border-radius, "md");
    font-weight: map.get(type.$font-weights, "medium");
    font-size: map.get(type.$font-sizes, "sm");
    transition: all 0.2s ease;

    &--primary {
      background-color: map.get(vars.$colors, "primary");
      color: white;

      &:hover {
        background-color: map.get(vars.$colors, "primary-dark");
        transform: translateY(-1px);
      }

      &:active {
        transform: translateY(0);
      }
    }

    &--secondary {
      border: 1px solid map.get(vars.$colors, "border");
      background-color: white;
      color: map.get(vars.$colors, "text");

      &:hover {
        background-color: map.get(vars.$colors, "primary-light");
        border-color: map.get(vars.$colors, "primary");
        color: map.get(vars.$colors, "primary");
      }
    }
  }

  // Loading and error states
  &__loading,
  &__error {
    @include mix.flex(row, center, center);
    min-height: 50vh;
    padding: map.get(vars.$spacing, "xl");
    text-align: center;
    font-size: map.get(type.$font-sizes, "lg");
  }

  &__loading {
    color: map.get(vars.$colors, "text-light");
  }

  &__error {
    color: map.get(vars.$colors, "danger");
  }
}
